<p>framework</p>
<div id="root"></div>
{% if template.name == 'product' %}
  <div id="add-to-cart-button" data-variant-id="1" data-product-title="{{product.title}}"></div>
{% endif %}
<script type="module" src="{{ 'vite-client.js' | asset_url }}" defer></script>
<script type="module" src="{{ 'vite-counter.js' | asset_url }}" defer></script>
{% if template.name == 'product' %}
  <script type="module" src="{{ 'vite-add-to-cart-button.js' | asset_url }}" defer></script>
{% endif %}

{% comment %}
   <script>
      // Paste block 1 IDs (one per line, no quotes) inside the backticks
  const block1Raw = `
  61576231010865
  61575750761970
  61575721152613
  61575732851878
  61576227711481
  61576245200517
  61576232391237
  61575794259764
  61575807039319
  61575864066290
  61575864066290
  61575622697759
  61575815378960
  61575670995788
  61576072528182
  61575896135080
  61576083447823
  61576137745780
  61575719413186
  61576211962747
  61575884945328
  61576186673931
  61576211842792
  61575730182738
  61576222192291
  61575899374869
  61575836287776
  61575770561047
  61576270190189
  61575660796185
  61576165945722
  61575748752980
  61576124817235
  61576185625441
  61575793271893
  61576211844407
  61576223843586
  61575757423082
  61575872347699
  61575914525621
  61576082309572
  61575677026660
  61575786041859
  61576024650941
  61576196544578
  61575650687952
  61575784481500
  61575947793592
  61576039440141
  61575856178006
  61576022430287
  61576287950386
  61576107147718
  61576005571116
  61576103578042
  61575971072746
  61575792791146
  61575881226761
  61575797380888
  61575883776580
  61575932974434
  61575949953999
  `;

  // Paste block 2 IDs (one per line, no quotes) inside the backticks
  const block2Raw = `
  61576165945722
  61575748752980
  61576124817235
  61576185625441
  61575793271893
  61576211844407
  61576223843586
  61575757423082
  61575872347699
  61575914525621
  61576082309572
  61575677026660
  61575786041859
  61576024650941
  61576196544578
  61575650687952
  61575784481500
  61575947793592
  61576039440141
  61575856178006
  61576022430287
  61576287950386
  61576107147718
  61576005571116
  61576103578042
  61575971072746
  61575792791146
  61575881226761
  61575797380888
  61575883776580
  61575932974434
  61575949953999
  61576288430942
  61575943924410
  61576086179910
  61575669947442
  61576137837570
  61576075019683
  61576023421215
  61575885337015
  `;

  // Convert raw data into arrays, remove empty lines
  const block1 = block1Raw.trim().split('\n').map(id => id.trim()).filter(Boolean);
  const block2 = block2Raw.trim().split('\n').map(id => id.trim()).filter(Boolean);

  // Function to find duplicates
  function findDuplicates(arr) {
    const seen = new Set();
    const duplicates = new Set();
    for (const id of arr) {
      if (seen.has(id)) {
        duplicates.add(id);
      } else {
        seen.add(id);
      }
    }
    return [...duplicates];
  }

  // Find common IDs
  const commonIDs = block2.filter(id => block1.includes(id));

  // Results
  console.log("Total count in Block 1:", block1.length);
  console.log("Total count in Block 2:", block2.length);
  console.log("Common IDs in Block 2 that exist in Block 1:", commonIDs);
  console.log("Duplicate IDs in Block 1:", findDuplicates(block1));
  console.log("Duplicate IDs in Block 2:", findDuplicates(block2));
  console.log("Total duplicates in Block 1:", findDuplicates(block1).length);
  console.log("Total duplicates in Block 2:", findDuplicates(block2).length);

  console.log("common ids from block 2 in block 1\n",commonIDs.join('\n'));

      </script>
{% endcomment %}
